---
import { execSync } from 'child_process'
import NavItem from '../components/NavItem.astro';
import ImageButton from '../components/ImageButton.astro';
import { createButtonString } from '../util';
import RootLayout, { type Props as RootProps } from './RootLayout.astro';
import MusicPlayer from '../components/MusicPlayer.svelte'
import { slide } from 'astro:transitions';

interface Props extends RootProps {
  frontmatter: {
    title?: string
    description?: string
  }
  reactive?: boolean
}

const { title, description } = Astro.props;
const { title: _title, description: _description } = Astro.props.frontmatter ?? { title: null, description: null }

const getGitInfo = () => {
  try {
    const exec = (cmd: string) => execSync(cmd).toString().trim();
    return {
      commitHash: exec(`git rev-parse HEAD`),
      commitBranch: exec(`git rev-parse --abbrev-ref HEAD`),
      commitMessage: exec(`git log -1 --pretty=%B`),
      commitDate: exec(`git log -1 --pretty=%cd`)
    };
  } catch (error) {
    console.error("Error getting Git info:");
    console.error(error);
    return { commitHash: "", commitMessage: "", commitBranch: "", commitDate: "" };
  }
};

const fetchCommitsFromGitHub = async () => {
  try {
    const response = await fetch('https://api.github.com/repos/ThinLiquid/site/commits');
    if (response.status !== 200) {
      throw new Error(`GitHub API returned status ${response.status}`);
    }
    const data = await response.json();
    return data.map((commit: any) => ({
      message: commit.commit.message,
      date: commit.commit.author.date,
      url: commit.html_url,
      hash: commit.sha
    }));
  } catch (error) {
    console.error("Error fetching commits from GitHub:");
    console.error(error);
    return new Array(10).fill({
      message: 'debug...',
      date: new Date().toISOString(),
      url: 'https://thinliquid.dev',
      hash: crypto.randomUUID()
    })
  }
};

const commit = getGitInfo()
const allCommits = await fetchCommitsFromGitHub();
---

{/* @ts-ignore */}
<RootLayout title={title ?? _title} description={description ?? _description}>
    <div class="tooltip" transition:persist></div>

    <div class="container">
      <marquee scrollamount="16">
        <span><b>you're @ thinliquid's [studio]</b></span>
        <span>how isn't ts deprecated yet</span>
        <span>last build: <b>{new Date().toUTCString()}</b></span>
        <span>like my shit? follow me on nekoweb!!</span>
        <span>git commit hashes be like: {commit.commitHash}</span>
        <span>i ain't got no more shit to put in this marquee</span>
      </marquee>
      <nav>
        <div>
          <a href="/" style={{
            textDecoration: 'none',
            color: 'var(--color-text)',
            display: 'flex', gap: '16px', justifyContent: 'center'
          }}>
            <img src="/icon.png" height="32" width="32">
            <h2 style={{ fontFamily: 'var(--font-readable)', margin: '0', lineHeight: '32px' }} transition:name="title">
              thinliquid's [studio]
            </h2>
          </a>
        </div>
        <div class="page">{title ?? _title}</div>
        <ul>
          <NavItem tooltip="home" color="sapphire" href="/home">home</NavItem>
          <NavItem tooltip="check out my button database" color="sapphire" href="/buttons-galore">buttons galore</NavItem>
          <NavItem tooltip="cool stuff i use" color="sky" href="/resources">resources</NavItem>
          <NavItem tooltip="read my ramblings" color="teal" href="/blog">blog</NavItem>
          <NavItem tooltip="commissions" color="yellow" href="/commissions" small={true}>commissions</NavItem>
          <NavItem tooltip="send me a message" color="green" href="https://thnlqd.atabook.org" small={true}>guestbook</NavItem>
          <NavItem tooltip="follow me on nekoweb" color="yellow" href="https://nekoweb.org/follow/thnlqd" small={true}>[+]</NavItem>
        </ul>
      </nav>
      
      <div class="some-shitty-class-name-here">
        <main class="content" transition:animate={slide({ duration: '1s' })}>
          <div style={{
            maxWidth: '700px',
            margin: 'auto'
          }}><slot/></div>
        </main>
  
        <section>
          <aside>
            
            {Astro.props.reactive !== false ? <MusicPlayer client:only transition:persist/> : null}
            <h2>sponsored segment</h2>
            <iframe width="100%" style="border:none;aspect-ratio:1/1;" src="https://rice.nekoweb.org/nekolink.html"></iframe>
            {Astro.props.reactive !== false ? (
              <h2>webrings</h2>
              <div transition:persist>
                <div id="nekowebring" style={{ color: 'var(--base)' }}>
                  <script is:inline type="text/javascript" src="https://webring.nekoweb.org/onionring-variables.js"></script>
                  <script is:inline type="text/javascript" src="https://webring.nekoweb.org/onionring-widget.js"></script>
                </div>
                <webring-container>
                  <config key="type" value="catppuccin-mocha"></config>
                  <config key="font" value="Neue Haas Grotesk, Helvetica Neue, Helvetica, Arial, sans-serif"></config>
                  <config key="fill" value="true"></config>
                
                  <script is:inline type="text/javascript" src="https://palette.nekoweb.org/webring.js"></script>
                </webring-container>
                <iframe id="bucket-webring" style="height: 3rem; border: none;width:100%;" src="https://webring.bucketfish.me/embed.html?name=ThinLiquid"></iframe>
              </div>
              <hr/>
            ) : null}
            <fieldset>
              <legend>latest git commit</legend>
              
              <h2>{commit.commitMessage}</h2>
              <small>
                <a href={"https://github.com/ThinLiquid/site/commit/" + commit.commitHash}>â ¿ {commit.commitHash.slice(0, 7)} ({commit.commitBranch})</a> [{commit.commitDate}]
              </small>
              <br/><br/>
              <details>
                <summary>commit history</summary>
                <br/>
                <div style={{
                  display: 'flex',
                  flexDirection: 'column',
                  gap: '8px'
                }}>
                  {allCommits.splice(1, 7).map((commit: any) => (
                    <code>
                        <a href={commit.url} target="_blank" style={{ fontSize: '13px' }}>
                          [{new Date(commit.date).toUTCString()}]
                        </a><br/>
                        <i>{commit.message}</i>
                        <br/>
                    </code>
                  ))}
                </div>
              </details>  
            </fieldset>
            <hr/>
            <h2>buttons</h2>
            <fieldset>
              <legend>
                my button
              </legend>
              <div>
                <ImageButton alt="my button" url="https://thinliquid.dev/thnlqd.png" /><br/>
                <textarea readonly onclick="this.select()">{createButtonString("https://thinliquid.dev/thnlqd.png", "thinliquid's button", "https://thinliquid.dev")}</textarea>
              </div>
            </fieldset>
            <br/>
            <div class="padded">
              <ImageButton alt="nekoweb.org button" href="https://nekoweb.org" url="https://raw.githubusercontent.com/ThinLiquid/buttons/main/img/nekoweb12.gif" />
              <ImageButton alt="arch linux button" href="https://archlinux.org" url="https://raw.githubusercontent.com/ThinLiquid/buttons/main/img/archlinux.gif" />
              <ImageButton alt="max's apartment button" href="https://max.nekoweb.org" url="https://raw.githubusercontent.com/ThinLiquid/buttons/main/img/maxpixels.gif" />
              <ImageButton alt="giiki's lair button" href="https://giikis2.nekoweb.org" url="https://raw.githubusercontent.com/ThinLiquid/buttons/main/img/giikis2.png" />
              <ImageButton alt="bomberfish.ca button" href="https://bomberfish.ca" url="https://raw.githubusercontent.com/ThinLiquid/buttons/main/img/bomberfish.gif" />
              <ImageButton alt="joosh's button" href="https://joo.sh/" url="https://files.joo.sh/img/buttons/icon.gif" />
              <ImageButton alt="eyeorb's button" href="https://eyeorb.net" url="https://eyeorb.net/site_button.gif" />
              <ImageButton alt="rice's button" href="https://rice.place" url="https://rice.nekoweb.org/button/riceplace.png" />
            </div>
            <hr/>
            <h2>socials</h2>
            <div style={{ display: 'flex', gap: '5px', flexWrap: 'wrap' }} class="padded">
              <a class="btn" href="https://wetdry.world/@thnlqd">mastodon</a>
              <a class="btn" href="https://osu.ppy.sh/users/ThinLiquid">osu!</a>
              <a class="btn" href="https://bsky.app/profile/thinliquid.dev">bluesky</a>
              <a class="btn" href="https://github.com/ThinLiquid">github</a>
              <a class="btn" href="https://github.com/ThinLiquid.gpg">pgp public key</a>
            </div>
          </aside>    
        </section>
      </div>

      <hr style={{ margin: 0 }} />
      <footer>
        {new Date().getFullYear()} &copy; ThinLiquid<br/>
        <small>
          powered by astro & bun || hosted on nekoweb
        </small>
      </footer>
    </div>

    <img src="/logo.png" class="logo" transition:name="logo" transition:persist>
</RootLayout>

<script is:inline lang="ts">
  document.addEventListener('astro:page-load', () => {
  const tooltip = document.querySelector('.tooltip');
  const navList = document.querySelector('nav')

  document.addEventListener('mousemove', (e) => {
    if (!tooltip || !tooltip.classList.contains('active')) return;
    tooltip.style.top = `${e.clientY + 16}px`;
    tooltip.style.left = `${e.clientX + 16}px`;
    
    if (e.clientX + tooltip.offsetWidth + 32 > window.innerWidth) {
      tooltip.style.left = `${e.clientX - tooltip.offsetWidth - 8}px`;
      tooltip.style.textAlign = 'left';
      tooltip.classList.add('right');
    }

    if (e.clientY + tooltip.offsetHeight > window.innerHeight) {
      tooltip.style.top = `${e.clientY - tooltip.offsetHeight - 8}px`;
      tooltip.style.textAlign = 'right';
    }
  });

  let current = null;
  document.addEventListener('mouseover', (e) => {
    current = e.target;
    if (current.getAttribute('data-tooltip')) {
      tooltip.innerHTML = current.getAttribute('data-tooltip');
      tooltip.classList.add('active');
    } else if (current.tagName === 'A' && current.href != null) {
      tooltip.innerHTML = `<small>${current.href}</small>`;
      tooltip.classList.add('active');
    }

    const handler = (e) => {
      tooltip.classList.remove('active');
      tooltip.classList.remove('right');
      current.removeEventListener('mouseout', handler);
      current = null;
      tooltip.innerText = '';
    };

    current.addEventListener('mouseout', handler);
  });
});
</script>

<style is:global lang="scss">

a {
  color: var(--color-primary);
}

.content, nav {
  a:hover {
    background: var(--color-primary)!important;
    color: var(--color-base)!important;

    img {
      filter: brightness(0)
    }
  }
}

.tooltip {
  position: fixed;
  z-index: 999999999;
  background: var(--color-base);
  padding: 4px 8px;
  border-radius: 4px;
  border: 1px solid var(--color-surface-0);
  pointer-events: none;
  max-width: 500px;
  break-word: anywhere;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  opacity: 0;
  transform: scale(0.8);
  transform-origin: top left;

  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;

  &.active {
    opacity: 1!important;
    transform: scale(1)!important;
  }
  &.right {
    transform-origin: top right;
  }
}



.container {
  border: 1px solid var(--color-surface-0);
  height: calc(100vh - 32px);
  overflow-y: scroll;
  scrollbar-width: none;

  nav {
    display: flex;
    position: sticky;
    top: 16px;
    z-index: 6969;
    box-shadow: 0 4px 4px var(--color-base);
    border-bottom: 1px solid var(--color-surface-0);
    padding: 16px 16px;
    top: 0;
    left: 0;
    gap: 32px;
    background: color-mix(in oklab, var(--color-base), transparent 25%);
    backdrop-filter: blur(20px) saturate(00%);
    
    justify-content: space-between;
    align-items: center;
    
    ul {
      display: flex;
      gap: 10px;
      list-style: none;
      padding: 0;
      margin: 0;

      li {
        white-space: nowrap;
        list-style: none;
      }
    }
  }

  .some-shitty-class-name-here {
    display: flex;
    scrollbar-width: none;
    width: 100%;

    .content {
      padding: 32px;
      flex: 1;
      width: 100%;
    }

    section {
      flex: 0 0 320px;
      min-width: 320px;
      border-left: 1px solid var(--color-surface-0);
    }
  }

  
}

.logo {
  position: fixed;
  bottom: 32px;
  left: 48px;
  width: 25vw;
  animation: 2s logo infinite var(--bounce);
  transition: opacity .2s;
  opacity: 0.5;
  transform: scale(1.2) rotate(30deg);
  pointer-events: none;
}

@keyframes logo {
  0% { transform: scale(1.2) rotate(10deg); }
  50% { transform: scale(1.5) rotate(0deg); }
  100% { transform: scale(1.2) rotate(10deg); }
}

@media screen and (max-width:1000px) {
  .page {
    display: none;
  }
}

del {
  color: var(--color-orange);
}

strong, b {
  color: var(--color-green);
}

em, i {
  color: var(--color-cyan);
}

footer {
  padding: 16px;
}

input[type="text"], select, textarea {
  outline: none;
  background: var(--color-base);
  border: 1px solid var(--color-surface-0);
  padding: 8px 12px;
  min-width: 224px;
  border-radius: 8px;
  font-size: 1em;
  line-height: 20px;
  color: var(--color-text);
  font-family: var(--font-interface);
  text-shadow: 0 1px 2px hsla(0,0%,4%,75%);

  &::placeholder {
    color: var(--color-text);
    opacity: 0.5;
  }

  &:hover {
    border-color: var(--color-surface-1)
  }

  &:focus {
    border: 1px dashed var(--color-green);
  }
}

select {
  padding: 8px 8px 8px 16px;
  min-width: 96px;
}

fieldset {
  border: 1px solid var(--color-surface-0);
  padding: 16px;
  padding-top: 8px;
  border-radius: 4px;

  h2 {
    margin-top: 0;
  }

  legend {
    color: var(--color-subtext-1);
  }
}

hr { border: 1px solid var(--color-surface-0); margin: 2rem 0; }

code:not(pre > code) {
  color: var(--color-subtext-1);
}

p, ul, ol {
  font-size: 16px;
  line-height: 24px;
}

h1 {
  font-size: 3rem;
  margin: 0;
}
h2 {
  font-size: 2rem;
  margin: 0;
  margin-top: 16px;
  margin-bottom: 10px;
}

h3 {
  font-size: 1.5rem;
  margin: 0;
  margin-top: 16px;
  margin-bottom: 10px;
}

h4 {
  font-size: 1.25rem;
  margin: 0;
  margin-top: 16px;
  margin-bottom: 10px;
}

p, a {
  font-size: 1rem;
}

blockquote {
  border-left: 4px solid var(--color-green);
  margin: 0;
  padding: 0 16px;
}

.astro-code {
  padding: 16px;
  border-radius: 4px;
  border: 1px solid var(--color-surface-1)
}

table {
  border-collapse: collapse;
  width: 100%;

  th, td {
    border: 1px solid var(--color-surface-0);
    padding: 8px;
  }

  th { text-align: left; }
}

#nekowebring {
  padding: 0;

  table {
    background: transparent;
    border-width: 0px;
  }
}

aside {
  margin-bottom: calc(16px + 8px);
}

aside > fieldset, aside > h2, aside > .padded {
  margin-left: 16px;
  margin-right: 16px;
  margin-top: 8px;
}

aside hr {
  margin: 16px 0;
}

input[type='range'] {
      overflow: hidden;
      width: 80px;
      -webkit-appearance: none;
      border: 1px solid var(--color-surface-0);
      background: transparent;
    }
    
    input[type='range']::-webkit-slider-thumb {
      width: 10px;
      -webkit-appearance: none;
      height: 10px;
      cursor: ew-resize;
      background: var(--color-primary);
    }

    input[type="range"]::-moz-range-progress {
  background-color: #43e5f7; 
}
input[type="range"]::-moz-range-track {  
  background-color: #9a905d;
}

@keyframes tilt-n-move-shaking {
  0% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(5px, 5px) rotate(5deg); }
  50% { transform: translate(0, 0) rotate(0eg); }
  75% { transform: translate(-5px, 5px) rotate(-5deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

marquee {
  overflow:visible;
  background: var(--color-primary);
  
  * {
    color: var(--color-base)!important;
  }

  span {
    margin: 0 16px;
  }
}

shake {
  display: inline-block;
  animation: tilt-n-move-shaking 0.15s infinite;
}

@media screen and (max-width: 640px) {
  .some-shitty-class-name-here {
    flex-direction: column;
    overflow: scroll;
  }
  .content {
    & > div {
      max-width: none!important;
      width: 100%;
    }
  }

  nav {
    flex-wrap: wrap;
    position: static!important;
    ul {
      flex-wrap: wrap;
    }
  }

  .some-shitty-class-name-here section {
    min-width: unset!important;
  }
}
</style>
